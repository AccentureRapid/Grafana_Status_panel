{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","coreModule","StatusPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","filter","displayTypes","aggregations","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","panel","targets","duplicates","measurement","hide","each","m","res","alias","target","length","addEditorTab","$panelContainer","find","css","$panelContoller","height","setElementHeight","clusterName","displayName","replace","RegExp","namePrefix","crit","warn","display","disabled","annotation","series","s","url","value","aggregation","max","datapoints","point","stats","min","total","avg","display_value","displayType","handleThresholdStatus","handleDisabledStatus","handleAnnotations","handle_css_display","parseUri","thresholds","parseThresholds","inverted","push","disabledValue","removeClass","addClass","undefined","isGrayOnNoData","links","uri","dashUri","params","dataList","map","seriesHandler","render","seriesData","flotpairs","getFlotPairs","scope","elem","attrs","ctrl","metricOptions","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport \"app/plugins/panel/graph/legend\";\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\nimport _ from \"lodash\";\nimport TimeSeries from \"app/core/time_series2\";\nimport coreModule from \"app/core/core_module\"\n\nimport './css/status_panel.css!';\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n    /** @ngInject */\n    constructor($scope, $injector, $log, $filter, annotationsSrv) {\n        super($scope, $injector);\n\n        //this.log = $log.debug;\n        this.filter = $filter;\n\n        this.displayTypes = ['Threshold', 'Disable State', 'Annotation'];\n        this.aggregations = ['Last', 'First', 'Max', 'Min', 'Sum', 'Avg'];\n\n        /** Bind events to functions **/\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('refresh', this.postRefresh.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    }\n\n    postRefresh() {\n        this.measurements = this.panel.targets;\n\n        /** Duplicate alias validation **/\n        this.duplicates = false;\n\n        this.measurements = _.filter(this.measurements, (measurement) => {\n            return !measurement.hide;\n        });\n\n        _.each(this.measurements, (m) => {\n            let res = _.filter(this.measurements, (measurement) => {\n                return (m.alias == measurement.alias || (m.target == measurement.target && m.target)) && !m.hide;\n            });\n\n            if (res.length > 1) {\n                this.duplicates = true;\n            }\n        });\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/vonage-status-panel/editor.html', 2);\n    }\n\n    setElementHeight() {\n        this.$panelContainer.find('.status-panel').css('height', this.$panelContoller.height + 'px');\n    }\n\n    onRender() {\n        this.setElementHeight();\n\n        if (this.panel.clusterName) {\n            this.panel.displayName =\n                this.filter('interpolateTemplateVars')(this.panel.clusterName, this.$scope)\n                    .replace(new RegExp(this.panel.namePrefix, 'i'), '');\n        } else {\n            this.panel.displayName = \"\";\n        }\n\n\n\n        let targets = this.panel.targets;\n\n        this.crit = [];\n        this.warn = [];\n        this.display = [];\n        this.disabled = [];\n        this.annotation = []\n\n        _.each(this.series, (s) => {\n            let target = _.find(targets, (target) => {\n                return target.alias == s.alias || target.target == s.alias;\n            });\n\n            if (!target) {\n                return;\n            }\n\n            s.alias = target.alias;\n            s.url = target.url;\n\n            let value;\n            switch (target.aggregation) {\n                case 'Max':\n                    value = _.max(s.datapoints, (point) => { return point[0]; })[0];\n                    value = s.stats.max;\n                    break;\n                case 'Min':\n                    value = _.min(s.datapoints, (point) => { return point[0]; })[0];\n                    value = s.stats.min;\n                    break;\n                case 'Sum':\n                    value = 0;\n                    _.each(s.datapoints, (point) => { value += point[0] });\n                    value = s.stats.total;\n                    break;\n                case 'Avg':\n                    value = s.stats.avg;\n                    break;\n                case 'First':\n                    value = s.datapoints[0][0];\n                    break;\n                default:\n                    value = s.datapoints[s.datapoints.length - 1][0];\n            }\n\n            s.display_value = value;\n\n            if (target.displayType == \"Threshold\") {\n                this.handleThresholdStatus(s, target);\n            }\n            else if (target.displayType == \"Disable State\") {\n                this.handleDisabledStatus(s,target);\n            }\n            else if (target.displayType == \"Annotation\") {\n                this.handleAnnotations(s, target);\n            }\n        });\n\n        this.handle_css_display();\n        this.parseUri();\n    }\n\n    handleThresholdStatus(series, target) {\n        series.thresholds = StatusPluginCtrl.parseThresholds(target);\n        series.inverted = series.thresholds.crit < series.thresholds.warn;\n        series.display = target.display;\n\n        if (!series.inverted) {\n            if (series.display_value >= series.thresholds.crit) {\n                this.crit.push(series);\n            } else if (series.display_value >= series.thresholds.warn) {\n                this.warn.push(series);\n            } else if (series.display) {\n                this.display.push(series);\n            }\n        } else {\n            if (series.display_value <= series.thresholds.crit) {\n                this.crit.push(series);\n            } else if (series.display_value <= series.thresholds.warn) {\n                this.warn.push(series);\n            } else if (series.display) {\n                this.display.push(series);\n            }\n        }\n    }\n\n    handleDisabledStatus(series, target) {\n\n        series.disabledValue = target.disabledValue;\n\n        if (series.display_value == series.disabledValue) {\n            this.disabled.push(series);\n        }\n    }\n\n    handleAnnotations(series, target) {\n        this.annotation.push(series);\n    }\n\n    handle_css_display() {\n        this.$panelContainer.removeClass('error-state warn-state disabled-state ok-state no-data-state');\n\n        if(this.duplicates) {\n            this.$panelContainer.addClass('error-state');\n        } else if (this.disabled.length > 0) {\n            this.$panelContainer.addClass('disabled-state');\n        } else if (this.crit.length > 0) {\n            this.$panelContainer.addClass('error-state');\n        } else if (this.warn.length > 0) {\n            this.$panelContainer.addClass('warn-state');\n        } else if((this.series == undefined || this.series.length == 0) && this.panel.isGrayOnNoData) {\n            this.$panelContainer.addClass('no-data-state');\n        } else {\n            this.$panelContainer.addClass('ok-state');\n        }\n    }\n\n    parseUri() {\n        if (this.panel.links && this.panel.links.length > 0) {\n            this.uri = this.panel.links[0].dashUri + \"?\" + this.panel.links[0].params;\n        } else {\n            this.uri = undefined;\n        }\n    }\n\n    static parseThresholds(metricOptions) {\n        let res = {};\n\n        res.warn = metricOptions.warn;\n        res.crit = metricOptions.crit;\n\n        return res;\n    }\n\n    onDataReceived(dataList) {\n        this.series = dataList.map(this.seriesHandler.bind(this));\n\n        this.render();\n    }\n\n    onDataError() {\n        this.crit = [];\n        this.warn = [];\n    }\n\n    seriesHandler(seriesData) {\n        var series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target\n        });\n\n        series.flotpairs = series.getFlotPairs(\"connected\");\n\n        return series;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        this.$panelContainer = elem.find('.panel-container');\n        this.$panelContoller = ctrl;\n    }\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}