{"version":3,"sources":["../src/status_ctrl.js"],"names":["angular","moment","kbn","_","TimeSeries","fileExport","MetricsPanelCtrl","StatusPluginCtrl","$scope","$injector","$log","annotationsSrv","log","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","filter","panel","targets","target","alias","hide","addEditorTab","series","color","each","s","find","thresholds","dataList","map","seriesHandler","render","seriesData","datapoints","value","scope","elem","attrs","ctrl","$panelContainer","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import 'app/plugins/panel/graph/legend';\nimport 'app/plugins/panel/graph/series_overrides_ctrl';\n\nimport angular from 'angular';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport * as fileExport from 'app/core/utils/file_export';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $log, annotationsSrv) {\n    super($scope, $injector);\n\n    this.log = $log.log;\n\n    /** Bind events to functions **/\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  postRefresh() {\n    this.log(\"refresh\");\n    this.measurements = _.filter(this.panel.targets, function(target) {\n      return target.alias && !target.hide;\n    });\n\n    // TODO: Remove temp test code\n    //if (this.status) {\n    //  this.$panelContainer.css('background-color', \"red\");\n    //} else {\n    //  this.$panelContainer.css('background-color', \"green\");\n    //}\n    //\n    //this.status = !this.status;\n  }\n\n  onInitEditMode() {\n    this.log(this);\n    this.addEditorTab('Options', 'public/plugins/status-panel/editor.html', 2);\n\n    this.log(this.panel.targets);\n  }\n\n  setUnitFormat() {\n    this.log(\"setUnitFormat\");\n  }\n\n  onDataError() {\n    this.log(\"onDataError\");\n  }\n\n  changeSeriesColor(series, color) {\n    this.log(\"changeSeriesColor\");\n  }\n\n  onRender() {\n    this.log(\"onRender\");\n\n    let targets = this.panel.targets;\n\n    _.each(this.series, function (s) {\n      let target = _.find(targets, function(target) {\n        return target.alias == s.alias;\n      });\n\n      s.thresholds = target.thresholds;\n    });\n  }\n\n  parseSeries() {\n    this.log(\"parseSeries\");\n  }\n\n  onDataReceived(dataList) {\n    this.log(\"onDataReceived\");\n    this.series = dataList.map(this.seriesHandler.bind(this));\n\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    this.log(\"seriesHandler\");\n    this.log(seriesData);\n\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    //series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n\n    return series;\n  }\n\n  getDecimalsForValue(value) {\n    this.log(\"getDecimalsForValue\");\n  }\n\n  formatValue(value) {\n    this.log(\"formatValue\");\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.log(\"link\");\n    this.$panelContainer = elem.find('.panel-container');\n  }\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}