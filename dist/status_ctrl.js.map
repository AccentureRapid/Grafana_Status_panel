{"version":3,"sources":["../src/status_ctrl.js"],"names":["angular","moment","kbn","_","TimeSeries","fileExport","MetricsPanelCtrl","StatusPluginCtrl","$scope","$injector","$log","annotationsSrv","log","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","filter","panel","targets","target","alias","hide","addEditorTab","series","color","dataList","map","seriesHandler","seriesData","datapoints","flotpairs","getFlotPairs","nullPointMode","value","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import 'app/plugins/panel/graph/legend';\nimport 'app/plugins/panel/graph/series_overrides_ctrl';\n\nimport angular from 'angular';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport * as fileExport from 'app/core/utils/file_export';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $log, annotationsSrv) {\n    super($scope, $injector);\n\n    this.log = $log.log;\n\n    /** Bind events to functions **/\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  postRefresh() {\n    this.log(\"refresh\");\n    this.measurements = _.filter(this.panel.targets, function(target) {\n      return target.alias && !target.hide;\n    });\n  }\n\n  onInitEditMode() {\n    this.log(this);\n    this.addEditorTab('Options', 'public/plugins/status-panel/editor.html', 2);\n\n    this.log(this.panel.targets);\n  }\n\n  setUnitFormat() {\n    this.log(\"setUnitFormat\");\n\n  }\n\n  onDataError() {\n    this.log(\"onDataError\");\n\n  }\n\n  changeSeriesColor(series, color) {\n    this.log(\"changeSeriesColor\");\n\n  }\n\n  onRender() {\n    this.log(\"onRender\");\n\n  }\n\n  parseSeries() {\n    this.log(\"parseSeries\");\n\n  }\n\n  onDataReceived(dataList) {\n    this.log(\"onDataReceived\");\n    this.log(dataList);\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.log(this.series);\n  }\n\n  seriesHandler(seriesData) {\n    this.log(\"seriesHandler\");\n    this.log(seriesData);\n\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    this.log(series);\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  getDecimalsForValue(value) {\n    this.log(\"getDecimalsForValue\");\n\n  }\n\n  formatValue(value) {\n    this.log(\"formatValue\");\n\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.log(\"link\");\n\n  }\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}