{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","StatusPluginCtrl","$scope","$injector","$log","annotationsSrv","log","debug","aggregations","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","filter","panel","targets","target","alias","hide","duplicates","each","m","res","measurement","length","addEditorTab","$panelContainer","find","css","$panelContoller","height","setElementHeight","crit","warn","series","s","thresholds","parseThresholds","inverted","value","aggregation","max","datapoints","point","min","push","removeClass","addClass","parseUri","links","uri","dashUri","params","undefined","dataList","map","seriesHandler","render","seriesData","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport \"app/plugins/panel/graph/legend\";\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\nimport _ from \"lodash\";\nimport TimeSeries from \"app/core/time_series2\";\n\nimport './css/status_panel.css!';\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $log, annotationsSrv) {\n    super($scope, $injector);\n\n    this.log = $log.debug;\n    this.aggregations = ['None', 'Max', 'Min', 'Sum'];\n\n    /** Bind events to functions **/\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  postRefresh() {\n    this.measurements = _.filter(this.panel.targets, (target) => {\n      return target.alias && !target.hide;\n    });\n\n    /** Duplicate alias validation **/\n    this.duplicates = false;\n\n    _.each(this.measurements, (m) => {\n      var res = _.filter(this.measurements, (measurement) => {\n        return m.alias == measurement.alias;\n      });\n\n      if (res.length > 1) {\n        this.duplicates = true;\n      }\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/status-panel/editor.html', 2);\n  }\n\n  setElementHeight() {\n    this.$panelContainer.find('.status-panel').css('height', this.$panelContoller.height + 'px');\n  }\n\n  onRender() {\n    this.log(this.panel);\n    this.setElementHeight();\n\n    let targets = this.panel.targets;\n\n    this.crit = [];\n    this.warn = [];\n\n    _.each(this.series, (s) => {\n      let target = _.find(targets, (target) => {\n        return target.alias == s.alias;\n      });\n\n      if (target) {\n        s.thresholds = StatusPluginCtrl.parseThresholds(target);\n        s.inverted = s.thresholds.crit < s.thresholds.warn;\n\n        let value;\n\n        switch (target.aggregation) {\n          case 'Max':\n            value = _.max(s.datapoints, (point) => { return point[0]; })[0];\n            break;\n          case 'Min':\n            value = _.min(s.datapoints, (point) => { return point[0]; })[0];\n            break;\n          case 'Sum':\n            value = 0;\n            _.each(s.datapoints, (point) => { value += point[0] });\n            break;\n          default:\n            value = s.datapoints[0][0]\n        }\n\n        if (!s.inverted) {\n          if (value >= s.thresholds.crit) {\n            this.crit.push(s);\n          } else if (value >= s.thresholds.warn) {\n            this.warn.push(s);\n          }\n        } else {\n          if (value <= s.thresholds.crit) {\n            this.crit.push(s);\n          } else if (value <= s.thresholds.warn) {\n            this.warn.push(s);\n          }\n        }\n      }\n    });\n\n    this.$panelContainer.removeClass('error-state warn-state ok-state');\n\n    if (this.crit.length > 0) {\n      //this.$panelContainer.css('background-color', \"red\");\n      this.$panelContainer.addClass('error-state');\n    } else if (this.warn.length > 0) {\n      //this.$panelContainer.css('background-color', \"orange\");\n      this.$panelContainer.addClass('warn-state');\n    } else {\n      //this.$panelContainer.css('background-color', \"green\");\n      this.$panelContainer.addClass('ok-state');\n    }\n\n    this.parseUri();\n  }\n\n  parseUri() {\n    if (this.panel.links.length > 0) {\n      this.uri = this.panel.links[0].dashUri + \"?\" + this.panel.links[0].params;\n    } else {\n      this.uri = undefined;\n    }\n  }\n\n  static parseThresholds(measurement) {\n    let res = {};\n\n    res.warn = measurement.warn;\n    res.crit = measurement.crit;\n\n    return res;\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n\n    this.render();\n  }\n\n  onDataError() {\n    this.crit = [];\n    this.warn = [];\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    //series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n\n    return series;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.$panelContainer = elem.find('.panel-container');\n    this.$panelContoller = ctrl;\n  }\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}