{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","StatusPluginCtrl","$scope","$injector","$log","annotationsSrv","log","debug","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","measurements","filter","panel","targets","target","alias","hide","duplicates","each","m","res","measurement","length","addEditorTab","series","color","$panelContainer","find","css","$panelContoller","height","setElementHeight","crit","warn","s","thresholds","parseThresholds","inverted","datapoints","push","removeClass","addClass","dataList","map","seriesHandler","render","seriesData","value","scope","elem","attrs","ctrl","nums","split","parseInt","trim","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport \"app/plugins/panel/graph/legend\";\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\nimport _ from \"lodash\";\nimport TimeSeries from \"app/core/time_series2\";\n\nimport './css/status_panel.css!';\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $log, annotationsSrv) {\n    super($scope, $injector);\n\n    this.log = $log.debug;\n\n    /** Bind events to functions **/\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  postRefresh() {\n    this.log(\"refresh\");\n\n    this.measurements = _.filter(this.panel.targets, (target) => {\n      return target.alias && !target.hide;\n    });\n\n    /** Duplicate alias validation **/\n    this.duplicates = false;\n\n    _.each(this.measurements, (m) => {\n      var res = _.filter(this.measurements, (measurement) => {\n        return m.alias == measurement.alias;\n      });\n\n      if (res.length > 1) {\n        this.duplicates = true;\n      }\n    });\n  }\n\n  onInitEditMode() {\n    this.log(this);\n    this.addEditorTab('Options', 'public/plugins/status-panel/editor.html', 2);\n\n    this.log(this.panel.targets);\n  }\n\n  setUnitFormat() {\n    this.log(\"setUnitFormat\");\n  }\n\n  onDataError() {\n    this.log(\"onDataError\");\n  }\n\n  changeSeriesColor(series, color) {\n    this.log(\"changeSeriesColor\");\n  }\n\n  setElementHeight() {\n    this.$panelContainer.find('.status-panel').css('height', this.$panelContoller.height + 'px');\n  }\n\n  onRender() {\n    this.log(\"onRender\");\n    this.setElementHeight();\n\n    let targets = this.panel.targets;\n\n    this.crit = [];\n    this.warn = [];\n\n    _.each(this.series, (s) => {\n      let target = _.find(targets, (target) => {\n        return target.alias == s.alias;\n      });\n\n      if (target) {\n        s.thresholds = StatusPluginCtrl.parseThresholds(target.thresholds);\n        s.inverted = target.inverted;\n\n        if (!s.inverted) {\n          if (s.datapoints[0][0] >= s.thresholds.crit) {\n            this.crit.push(s);\n          } else if (s.datapoints[0][0] >= s.thresholds.warn) {\n            this.warn.push(s);\n          }\n        } else {\n          if (s.datapoints[0][0] <= s.thresholds.crit) {\n            this.crit.push(s);\n          } else if (s.datapoints[0][0] <= s.thresholds.warn) {\n            this.warn.push(s);\n          }\n        }\n      }\n    });\n\n    this.$panelContainer.removeClass('error-state warn-state ok-state');\n\n    if (this.crit.length > 0) {\n      //this.$panelContainer.css('background-color', \"red\");\n      this.log(\"test\");\n      this.$panelContainer.addClass('error-state');\n    } else if (this.warn.length > 0) {\n      //this.$panelContainer.css('background-color', \"orange\");\n      this.$panelContainer.addClass('warn-state');\n    } else {\n      //this.$panelContainer.css('background-color', \"green\");\n      this.$panelContainer.addClass('ok-state');\n    }\n  }\n\n  static parseThresholds(thresholds) {\n    var res = {};\n\n    let nums = thresholds.split(\",\");\n\n    res.warn = parseInt(nums[0].trim());\n    res.crit = parseInt(nums[1].trim());\n\n    return res;\n  }\n\n  parseSeries() {\n    this.log(\"parseSeries\");\n  }\n\n  onDataReceived(dataList) {\n    this.log(\"onDataReceived\");\n    this.series = dataList.map(this.seriesHandler.bind(this));\n\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    this.log(\"seriesHandler\");\n    this.log(seriesData);\n\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    //series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n\n    return series;\n  }\n\n  getDecimalsForValue(value) {\n    this.log(\"getDecimalsForValue\");\n  }\n\n  formatValue(value) {\n    this.log(\"formatValue\");\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.log(\"link\");\n    this.$panelContainer = elem.find('.panel-container');\n    this.$panelContoller = ctrl;\n  }\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}